<!DOCTYPE html>
<html>
  <head>
    <title>Socket Test</title>
    <script
      src="https://code.jquery.com/jquery-3.7.0.min.js"
      integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
      crossorigin="anonymous"
    ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.0/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/notify/0.4.2/notify.min.js"></script>
    <style>
      pre {
        outline: 1px solid #ccc;
        padding: 5px;
        margin: 5px;
      }
      .string {
        color: green;
      }
      .number {
        color: darkorange;
      }
      .boolean {
        color: blue;
      }
      .null {
        color: magenta;
      }
      .key {
        color: red;
      }
    </style>
  </head>

  <body>
    <h1 id="title">Test Client</h1>
    <!-- <h3 id="socketio">Socket IO Not connected</h3> -->
    <h3 id="websocket">Websocket biasa Not connected</h3>
    <button onclick="testSubmit('cikawung')">Send Test Data Gewinn Cikawung</button>
    <button onclick="testSubmit('cikampek')">Send Test Data Gewinn Cikampek</button>
    <button onclick="testSubmit2()">Send Test Data Small Scale</button>
    <button onclick="getStats()">Get Statistics</button>

    <br />
    <div style="height: 20px"></div>
    <div
      id="stats"
      style="
        height: 300px;
        min-width: 90%;
        border: 1px solid #000;
        overflow-y: auto;
      "
    ></div>
    <h3>Last Message</h3>
    <div
      id="lm"
      style="
        height: 300px;
        min-width: 90%;
        border: 1px solid #000;
        overflow-y: auto;
      "
    ></div>
    <script>
      function syntaxHighlight(json) {
        json = json
          .replace(/&/g, "&amp;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
        return json.replace(
          /("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,
          function (match) {
            var cls = "number";
            if (/^"/.test(match)) {
              if (/:$/.test(match)) {
                cls = "key";
              } else {
                cls = "string";
              }
            } else if (/true|false/.test(match)) {
              cls = "boolean";
            } else if (/null/.test(match)) {
              cls = "null";
            }
            return '<span class="' + cls + '">' + match + "</span>";
          }
        );
      }
      const server = "devapippic.segitigamerah.com";
      const group = "gewinn-scale";
      const group2 = "small-scale";
      const locationfix = "cikampek";
      const locationfix2 = "cikawung";
      const type = 1;
      const ws = new WebSocket(`wss://${server}/socket-biasa`);

      ws.onerror = (ev) => {
        console.log(ev);
      };
      ws.onopen = (ev) => {
        console.log("opened");
        ws.send(
          JSON.stringify({ subscribe: 1, clientId: `${group}-${locationfix}-${'web-dev-trigger'}` })
        );
        document.getElementById("websocket").innerHTML =
          "WebSocket biasa Connected!";
      };
      ws.onclose = (ev) => {
        document.getElementById("websocket").innerHTML =
          "WebSocket biasa Not Connected!";
      };
      ws.onmessage = (ev) => {
        try {
          const data = JSON.parse(ev?.data);
          const prettyJson = JSON.stringify(data, null, 4);
          const highlightedJson = syntaxHighlight(prettyJson);
          const wrappedHighlightedJson = `<pre>${highlightedJson}</pre>`;

          if (data?.type == 1) {
            document.getElementById("lm").innerHTML = wrappedHighlightedJson;
          } else {
            document.getElementById("stats").innerHTML = wrappedHighlightedJson;
          }

          console.log(data);
        } catch (error) {
          // You might want to log the error or handle it somehow
          console.error(error);
        }
      };
      const getStats = () => {
        if (ws.readyState === WebSocket.OPEN) {
          const datasend = JSON.stringify({ admin: "123456" }).toString();
          ws.send(datasend, (err) => {
            if (err) {
              return console.log(
                "Error Sending data To Websocket Server: ",
                err.message
              );
            }
          });
        }
      };
      const testSubmit = (location) => {
        if (ws.readyState === WebSocket.OPEN) {
          const min = 1000; // Minimum value (inclusive)
          const max = 9999; // Maximum value (inclusive)

          const randomNumber =
            Math.floor(Math.random() * (max - min + 1)) + min;
          const object = {
            group,
            location,
            type,
            data: randomNumber.toString(),
          };
          const datasend = JSON.stringify(object).toString();
          $.notify(`${randomNumber.toString()} is send!`, "success");
          ws.send(datasend, (err) => {
            if (err) {
              $.notify(
                `${randomNumber.toString()} is not send!, due to error. ${
                  err.message
                }`
              );
              return console.log(
                "Error Sending data To Websocket Server: ",
                err.message
              );
            }
            console.log("massuk, ", randomNumber);
          });
        }
      };
      const testSubmit2 = () => {
        if (ws.readyState === WebSocket.OPEN) {
          const min = 20; // Minimum value (inclusive)
          const max = 30; // Maximum value (inclusive)

          const randomNumber =
            Math.floor(Math.random() * (max - min + 1)) + min;
          const object = {
            group: group2,
            location: locationfix2,
            type,
            data: randomNumber.toString(),
          };
          const datasend = JSON.stringify(object).toString();
          $.notify(`${randomNumber.toString()} is send!`, "success");
          ws.send(datasend, (err) => {
            if (err) {
              $.notify(
                `${randomNumber.toString()} is not send!, due to error. ${
                  err.message
                }`
              );
              return console.log(
                "Error Sending data To Websocket Server: ",
                err.message
              );
            }
            console.log("massuk, ", randomNumber);
          });
        }
      };
    </script>
  </body>
</html>
